# Playing ACC audio from a file

```elixir
File.cd(__DIR__)
Logger.configure(level: :error)

Mix.install([
  {:membrane_core, "~> 1.0"},
  {:membrane_kino_plugin, path: ".."},
  {:membrane_file_plugin, "~> 0.17.0"},
  {:membrane_aac_plugin, "~> 0.18.1"}
])
```

## Pipeline definition

Input video is loaded from the file and directly played using `Kino.Video` sink/player.

```elixir
import Membrane.ChildrenSpec

alias Membrane.{
  File,
  Kino
}

alias Membrane.RCPipeline, as: RC
alias Membrane.AAC.Parser

input_filepath = "./res/input.aac"
kino = Membrane.Kino.Player.new(audio: true)

structure =
  child(:file_input, %File.Source{location: input_filepath})
  |> child(:parser, Parser)
  |> via_in(:audio)
  |> child(:video_player, %Kino.Player.Sink{kino: kino})

:ok
```

## Playing pipeline

```elixir
pipeline = RC.start!()
RC.exec_actions(pipeline, spec: structure)
kino
```
