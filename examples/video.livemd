# Playing H264 video from a file

```elixir
File.cd(__DIR__)
Logger.configure(level: :error)

Mix.install([
  {:kino, "~> 0.8.1"},
  {:membrane_core, "~> 0.11.2"},
  {:membrane_kino_plugin, path: ".."},
  {:membrane_file_plugin, "~> 0.13.0"},
  {:membrane_raw_video_format, "~> 0.2"},
  {:membrane_h264_ffmpeg_plugin, "~> 0.25.2"}
])
```

## Kino Player

```elixir
kino = Kino.Video.Binary.new()
```

## Pipeline definition

Input video is loaded from the file and directly played using `Kino.Video` sink/player.

```elixir
import Membrane.ChildrenSpec

alias Membrane.{
  File,
  RawVideo,
  Kino
}

alias Membrane.H264.FFmpeg.Parser
alias Membrane.RemoteControlled, as: RC

input_filepath = "./res/input.h264"

structure =
  child(:file_input, %File.Source{location: input_filepath})
  |> child(:parser, %Parser{framerate: {60, 1}})
  |> child(:video_player, %Kino.Video.Sink{kino: kino})

:ok
```

## Playing pipeline

```elixir
pipeline = RC.Pipeline.start!()
RC.Pipeline.exec_actions(pipeline, spec: structure)
RC.Pipeline.exec_actions(pipeline, playback: :playing)
```
